"use strict";var precacheConfig=[["/flint-data-visualization/index.html","89bf5573bf8f7bcd189c0127158741a6"],["/flint-data-visualization/static/css/main.698a13a5.css","03571c5f9e1edff216c3235ca66fc041"],["/flint-data-visualization/static/media/AGaramondPro-Regular.0a505b0b.otf","0a505b0b075e57b8628e5741c5b28fc3"],["/flint-data-visualization/static/media/Druk-Heavy-Web.72aa52fb.woff","72aa52fba1efc0f4272d3eb4b145bbe2"],["/flint-data-visualization/static/media/Druk-Heavy-Web.7754f91c.woff2","7754f91cbb99baca8bbbd9e1a01266d8"],["/flint-data-visualization/static/media/Druk-Heavy-Web.b28c490a.eot","b28c490a8816f9e5f5396bcd24ce7fe1"],["/flint-data-visualization/static/media/FoundersGroteskCondensedWeb-Light.18da2284.woff","18da2284799a0e9cc40c128bf0c47104"],["/flint-data-visualization/static/media/FoundersGroteskCondensedWeb-Light.22e6c9d0.woff2","22e6c9d0da842b690b770f0050e05789"],["/flint-data-visualization/static/media/FoundersGroteskCondensedWeb-Light.f58055c7.eot","f58055c73d28c47cf4604fff71afb241"],["/flint-data-visualization/static/media/FoundersGroteskCondensedWeb-Medium.11a0e6fd.woff","11a0e6fd6e7b3a50cd46d7ebc4c23db9"],["/flint-data-visualization/static/media/FoundersGroteskCondensedWeb-Medium.aa491260.eot","aa491260ca892c7e7b44fb6180ff9584"],["/flint-data-visualization/static/media/FoundersGroteskCondensedWeb-Medium.ab245288.woff2","ab245288e16f74f95361dd6e88ae4f2b"],["/flint-data-visualization/static/media/TREX_AUG_FLINT_2015-122-1.7dcabb87.jpg","7dcabb873a00d009adf52891853e4753"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var r="/flint-data-visualization/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});